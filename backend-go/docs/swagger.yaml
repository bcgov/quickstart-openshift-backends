definitions:
  structs.ResponseHTTP:
    properties:
      data: {}
      message:
        type: string
      success:
        type: boolean
    type: object
  structs.User:
    properties:
      addresses:
        items:
          $ref: '#/definitions/structs.UserAddress'
        type: array
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  structs.UserAddress:
    properties:
      city:
        type: string
      id:
        type: integer
      state:
        type: string
      street:
        type: string
      user_id:
        type: integer
      zip_code:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/users:
    get:
      consumes:
      - application/json
      description: Get all Users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseHTTP'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/structs.User'
                  type: array
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/structs.ResponseHTTP'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.ResponseHTTP'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/structs.ResponseHTTP'
      summary: Get all Users
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Create a new user in the database
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/structs.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/structs.User'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/structs.ResponseHTTP'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.ResponseHTTP'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/structs.ResponseHTTP'
      summary: Create a new user
      tags:
      - Users
  /api/v1/users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user from the database by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/structs.ResponseHTTP'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.ResponseHTTP'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/structs.ResponseHTTP'
      summary: Delete a user
      tags:
      - Users
    get:
      consumes:
      - application/json
      description: Get user from the database by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/structs.User'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/structs.ResponseHTTP'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.ResponseHTTP'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/structs.ResponseHTTP'
      summary: Get user by ID
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Update an existing user in the database
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/structs.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/structs.User'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/structs.ResponseHTTP'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.ResponseHTTP'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/structs.ResponseHTTP'
      summary: Update an existing user
      tags:
      - Users
  /api/v1/users/{id}/addresses:
    get:
      consumes:
      - application/json
      description: Get all addresses for a user from the database
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseHTTP'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/structs.UserAddress'
                  type: array
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/structs.ResponseHTTP'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.ResponseHTTP'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/structs.ResponseHTTP'
      summary: Get user addresses
      tags:
      - Addresses
    post:
      consumes:
      - application/json
      description: Create a new user address in the database
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Address information
        in: body
        name: address
        required: true
        schema:
          $ref: '#/definitions/structs.UserAddress'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/structs.UserAddress'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/structs.ResponseHTTP'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.ResponseHTTP'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/structs.ResponseHTTP'
      summary: Create a user address
      tags:
      - Addresses
  /api/v1/users/{id}/addresses/{addressId}:
    get:
      consumes:
      - application/json
      description: Get a user address from the database by address ID
      parameters:
      - description: Address ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/structs.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/structs.UserAddress'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/structs.ResponseHTTP'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.ResponseHTTP'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/structs.ResponseHTTP'
      summary: Get user address by address ID
      tags:
      - Addresses
  /api/v1/users/{id}/addresses/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user address from the database by ID
      parameters:
      - description: Address ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/structs.ResponseHTTP'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.ResponseHTTP'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/structs.ResponseHTTP'
      summary: Delete a user address
      tags:
      - Addresses
  /health:
    get:
      description: Check the health of the server and database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Database connection error
          schema:
            type: string
      summary: Health Check
      tags:
      - health
swagger: "2.0"
