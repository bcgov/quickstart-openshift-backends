name: PR

on:
  pull_request:
    branches: [main]

concurrency:
  # PR open and close use the same group, allowing only one at a time
  group: pr-${{ github.workflow }}-${{ github.event.number }}
  cancel-in-progress: true
permissions:
  packages: write
  contents: read
  pull-requests: write
  issues: write
jobs:
  # https://github.com/bcgov/action-builder-ghcr
  builds:
    name: Builds
    if: "!github.event.pull_request.head.repo.fork"
    permissions:
      packages: write
    outputs:
      digest: ${{ steps.builds.outputs.digest }}
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        package: [ backend-go, backend-java, backend-py, migrations-go, migrations-py]
        include:
          - package: backend-go
            triggers: ('backend-go/')
          - package: backend-java
            triggers: ('backend-java/')
          - package: backend-py
            triggers: ('backend-py/')
          - package: migrations-py
            triggers: ('backend-py/db')
            build_context: ./backend-py/db
          - package: migrations-go
            triggers: ('backend-go/db')
            build_context: ./backend-go/db
    steps:
      - uses: bcgov/action-builder-ghcr@ace71f7a527ca6fc43c15c7806314be5a4579d2c # v2.3.0
        id: builds
        with:
          build_context: ${{ matrix.build_context }}
          keep_versions: 10
          package: ${{ matrix.package }}
          tag: ${{ github.event.number }}
          triggers: ${{ matrix.triggers }}
          tag_fallback: latest

  deploys:
    name: Deploys
    needs: [builds]
    uses: ./.github/workflows/.deploy.yml
    secrets:
      oc_namespace: ${{ vars.OC_NAMESPACE }}
      oc_token: ${{ secrets.OC_TOKEN }}
    with:
      db_user: app-${{ github.event.number }}
      params: --set global.secrets.persist=false

  results:
    name: PR Results
    needs: [ builds, deploys]
    if: always()
    runs-on: ubuntu-24.04
    steps:
      - if: contains(needs.*.result, 'failure')||contains(needs.*.result, 'canceled')
        run: echo "At least one job has failed." && exit 1
      - run: echo "Success!"
